library(TReNA)
?TReNA
?run.LassoPVSolver
?TReNA
detach("package:TReNA", unload=TRUE)
library(TReNA)
?TReNA
?solve
library(TReNA)
?TReNA
?solve
?solve.TReNA
library(TReNA)
?solve
?TReNA
?TReNA
?TReNA
library(TReNA)
?TReNA
?solve
?`run,BayesSpikeSolver-method`
library(TReNA)
?TReNA
?solve
?solve-methods
library(TReNA)
?solve
library(TReNA)
?TReNA
library(TReNA)
?TReNA
library(TReNA)
?TReNA
?solve
library(TReNA)
?solve
library(TReNA)
?TReNA
?solve
library(TReNA)
?TReNA
?TReNA
?solve
library(TReNA)
?solve
library(TReNA)
?solve
m <- data.frame(word.1 = rep(1:10), word.2 = rep(1:5))
m
m <- data.frame(word.1 = rep(1:10,10), word.2 = rep(1:5,20))
m
head(m)
head(m,21)
library(dplyr)
library(dplyr)
?summarize
?count
?summarize
summarize(m)
summarize(m,count)
?group_by
group_by(m, word.1,word.2)
group_by(m, word.1,word.2,add=TRUE)
?summarize
summarize(group_by(m, word.1))
summarize(m, word.1)
summarize(m, count(word.1))
summarize(m, word.1)
m <- data.frame(word.1 = rep(1:10,10), word.2 = rep(1:5,20),counts = rep(1,100))
head(m)
?ddply
library(plyr)
?ddply
?numcolwise
?aggregate
test <- ddply(m, "word.2",numcolwise(sum))
test
?ddply
test <- ddply(m, c("word.1","word.2"),numcolwise(sum))
test
m <- data.frame(word.1 = rep(1:10,10), word.2 = rep(1:5,20),word.3 = rep(1:2, 50), word.4 = rep(1:20, 5),counts = rep(1,100))
test <- ddply(m, c("word.1","word.2","word.3","word.4"),numcolwise(sum))
head(test)
test
?solve
knitr::opts_chunk$set(echo = TRUE)
grep("\\S", my.string, value = TRUE)
my.string <- "Thishasnospaces"
grepl("\\s",my.string)
grepl("\\S",my.string)
grep("\\S", my.string, value = TRUE)
gsub("\\S", "0",my.string)
my.string1 <- "My phone number is 8675309"
my.string2 <- "My address is 1274 King St."
my.strings <- c(my.string1, my.string2)
# Match only the phone number using an exact number of digits:
grepl("\\d{7}",my.strings)
# Match both by looking for 3-8 digits
grepl("\\d{3,8}",my.strings)
# Match only if there's at least 1 number 8
grepl("8+",my.strings)
# Match if there's 0 or 1 number 8
grepl("8?",my.strings)
my.string1 <- "My phone number is 8675309"
my.string2 <- "My address is 1274 King St."
my.strings <- c(my.string1, my.string2)
# Match only the phone number using an exact number of digits:
grepl("\\d{4}",my.strings)
# Match both by looking for 3-8 digits
grepl("\\d{3,8}",my.strings)
# Match only if there's at least 1 number 8
grepl("8+",my.strings)
# Match if there's 0 or 1 number 8
grepl("8?",my.strings)
my.string1 <- "My phone number is 8675309"
my.string2 <- "My address is 1274 King St."
my.strings <- c(my.string1, my.string2)
# Match only the address using an exact number of digits:
grepl("\\d{7}",my.strings)
# Match both by looking for 3-8 digits
grepl("\\d{3,8}",my.strings)
# Match only if there's at least 1 number 8
grepl("8+",my.strings)
# Match if there's 0 or 1 number 8
grepl("8?",my.strings)
my.string <- "My favorite foods are cheese and chocolate; some people don't like cheese and chocolate"
sub("(cheese) and (chocolate)","cheddar \\1 and dark \\2",my.string)
gsub("(cheese) and (chocolate)","cheddar \\1 and dark \\2",my.string)
my.string <- "My favorite foods are cheese crackers and chocolate; some people don't like cheese and chocolate"
gsub("(cheese)(.)(chocolate)","cheddar \\1\\2dark \\3",my.string)
my.string1 <- "Fred is a good friend"
my.string2 <- "You could say my best friend is Fred"
my.strings <- c(my.string1, my.string2)
# If you see "good" or "best", insert "very" in front
gsub("(good|best)","very \\1",my.strings)
# Specify the type of cheese and chocolate that I like
my.string <- "My favorite foods are cheese crackers and chocolate; some people don't like cheese and chocolate"
gsub("(cheese)(.)(chocolate)","cheddar \\1\\2dark \\3",my.string)
setwd("~/Documents/Github/FH_intermediate_R/Week_2")
