knitr::opts_chunk$set(echo = TRUE)
uniprobe <- read.table(file = "./uniprot_compare/tomtom.txt")
swissreg <- read.table(file = "./swiss_regulon_compare/tomtom.txt")
names(uniprobe) <- c("Query.ID", "Target.ID", "Optimal.offset", "Pvalue","Evalue","Qvalue","Overlap","Query.consensus","Target.consensus","Orientation")
names(swissreg) <- c("Query.ID", "Target.ID", "Optimal.offset", "Pvalue","Evalue","Qvalue","Overlap","Query.consensus","Target.consensus","Orientation")
dim(uniprobe); dim(swissreg)
above.uniprobe <- uniprobe %>%
select(Query.ID, Target.ID, Pvalue) %>%
mutate(logP = -1*log10(Pvalue)) %>% filter(logP >= 7.3)
above.uniprobe$Query.ID <- as.character(above.uniprobe$Query.ID)
above.uniprobe$Target.ID <- as.character(above.uniprobe$Target.ID)
repeat.uniprobe <- unique(above.uniprobe$Query.ID)
length(repeat.uniprobe)
above.swiss <- swissreg %>%
select(Query.ID, Target.ID, Pvalue) %>%
mutate(logP = -1*log10(Pvalue)) %>% filter(logP >= 7.3)
above.swiss$Query.ID <- as.character(above.swiss$Query.ID)
above.swiss$Target.ID <- as.character(above.swiss$Target.ID)
repeat.swiss <- unique(above.swiss$Query.ID)
length(repeat.swiss)
swiss.v.uniprobe <- read.table(file = "./swiss_vs_uniprobe/tomtom.txt")
names(swiss.v.uniprobe) <- c("Query.ID", "Target.ID", "Optimal.offset", "Pvalue","Evalue","Qvalue","Overlap","Query.consensus","Target.consensus","Orientation")
above.swiss.v.uniprobe <- swiss.v.uniprobe %>%
select(Query.ID, Target.ID, Pvalue) %>%
mutate(logP = -1*log10(Pvalue)) %>% filter(logP >= 7.3)
above.swiss.v.uniprobe$Query.ID <- as.character(above.swiss.v.uniprobe$Query.ID)
above.swiss.v.uniprobe$Target.ID <- as.character(above.swiss.v.uniprobe$Target.ID)
repeat.swiss.v.uniprobe <- unique(above.swiss.v.uniprobe$Query.ID)
length(repeat.swiss.v.uniprobe)
library(MotifDb)
all.uniprobe <- query(MotifDb, "uniprobe")
all.swiss <- query(MotifDb, "swissregulon")
length(all.uniprobe); length(all.swiss)
head(values(all.uniprobe)$providerId)
head(repeat.uniprobe)
trimmed.uniprobe <- gsub(".*(UP\\d{5}).*","\\1",repeat.uniprobe)
uniprobe.to.add <- subset(all.uniprobe, !(providerId %in% trimmed.uniprobe))
length(uniprobe.to.add)
head(values(all.swiss)$providerId)
head(repeat.swiss)
trimmed.swiss <- gsub("NA-SwissRegulon-(.+)","\\1",repeat.swiss)
swiss.to.add <- subset(all.swiss, !(providerId %in% trimmed.swiss))
length(swiss.to.add)
trimmed.overlaps <- gsub("NA-SwissRegulon-(.+)","\\1",repeat.swiss.v.uniprobe)
swiss.in.uniprobe <- intersect(trimmed.overlaps, values(swiss.to.add)$providerId)
length(swiss.in.uniprobe)
final.swiss.to.add <- subset(swiss.to.add, !(providerId %in% swiss.in.uniprobe))
length(final.swiss.to.add)
1554+256+630+354
2794/1204
2794/209
2184/1204
2184/1024
2184/209
?left_join
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
df <- data.frame(X = 1:10, Y = letters[1:10])
select(df, X)
library(dplyr)
df <- data.frame(X = 1:5, Y = letters[1:5])
select(df, X)
my.column <- "X"
select(df, my.column)
my.columns <- c("X","Y")
for(i in my.columns){
select(df, my.column)
}
my.columns <- c("X","Y")
for(i in my.columns){
select(df, i)
}
my.columns <- c("X","Y")
for(i in my.columns){
print(select(df, i))
}
all.hoco <- all.hoco %>%
select(Query.ID, Target.ID, Pvalue) %>%
mutate(logP = -1*log10(Pvalue))
head(all.hoco)
df <- tbl_df(df)
df
class(df)
library(dplyr)
df <- data.frame(X = 1:5, Y = letters[1:5])
class(df)
df <- tbl_df(df)
class(df)
?mutate
?_mutate
?.mutate
?select
select(df, New.Name = X)
rename(df, New.Name = X)
select(df "X")
select(df, "X")
select(df, X)
?filter
?transmute
?mutate_
?transmute
mutate(df, Z = paste0(X,Y))
transmute(df, Z = paste0(X,Y))
?quo
sessionInfo()
?!!
!
;
?summarise
for(i in names(df)){
select(df, i)
}
for(i in names(df)){
print(select(df, i))
}
all.motifs <- subset(MotifDb, dataSource %in% c("HOCOMOCOv10","jaspar2016"))
all.motifs <- subset(all.motifs, organism %in% c("Hsapiens","Mmusculus"))
length(all.motifs)
getwd()
setwd("~/Documents/Github/FH_intermediate_R/Week_3")
setwd("../Datasets/")
head(all.motifs)
all.motifs <- values(all.motifs)$providerID
head(all.motifs)
all.motifs <- subset(MotifDb, dataSource %in% c("HOCOMOCOv10","jaspar2016"))
all.motifs <- subset(all.motifs, organism %in% c("Hsapiens","Mmusculus"))
length(all.motifs)
all.motifs <- values(all.motifs)$providerId
head(all.motifs)
saveRDS(all.motifs, "./all_motifs.RDS")
knitr::opts_chunk$set(echo = TRUE)
library(MotifDb); library(dplyr)
all.motifs <- subset(MotifDb, dataSource %in% c("HOCOMOCOv10","jaspar2016"))
all.motifs <- subset(all.motifs, organism %in% c("Hsapiens","Mmusculus"))
length(all.motifs)
human.hoco <- read.table(file = "./TOMTOM/hocomoco_jaspar_human/tomtom.txt")
mouse.hoco <- read.table(file = "./TOMTOM/hocomoco_jaspar_mouse/tomtom.txt")
all.hoco <- rbind(human.hoco,mouse.hoco)
names(all.hoco) <- c("Query.ID", "Target.ID", "Optimal.offset", "Pvalue","Evalue","Qvalue","Overlap","Query.consensus","Target.consensus","Orientation")
dim(all.hoco)
all.hoco <- all.hoco %>%
select(Query.ID, Target.ID, Pvalue) %>%
mutate(logP = -1*log10(Pvalue))
head(all.hoco)
above.p <- all.hoco %>% filter(logP >= 7.3)
above.p$Query.ID <- as.character(above.p$Query.ID)
above.p$Target.ID <- as.character(above.p$Target.ID)
repeat.motifs <- unique(above.p$Query.ID)
length(repeat.motifs)
trimmed.repeats <- gsub(".+HOCOMOCOv10-","",repeat.motifs)
fimo.motifs <- subset(all.motifs, !(providerId %in% trimmed.repeats))
length(fimo.motifs)
colnames (values (all.motifs))
head(values(all.motifs)$providerName)
head(values(all.motifs)$geneSymbol)
asset.7 <- data.frame(motifs = as.character(values(all.motifs)$providerName),
TFs = as.character(values(all.motifs)$geneSymbol))
head(asset.7); dim(asset.7)
fimo.TFs <- data.frame(motifs = values(fimo.motifs)$providerName,
TFs = values(fimo.motifs)$geneSymbol)
head(fimo.TFs); dim(fimo.TFs)
head(above.p); dim(above.p)
above.p$Query.ID <- gsub(".+HOCOMOCOv10-","",above.p$Query.ID)
above.p$Target.ID <- gsub(".+jaspar2016-.+-","",above.p$Target.ID)
asset.8 <- select(above.p, Query.ID, Target.ID); head(asset.8)
prelim.mapping <- left_join(asset.8,asset.7, by = c("Query.ID" = "motifs"))
head(prelim.mapping);dim(prelim.mapping)
names(prelim.mapping)[2] <- "motifs"
final.mapping <- rbind(prelim.mapping[,2:3], fimo.TFs)
head(final.mapping);dim(final.mapping)
final.mapping <- final.mapping[!duplicated(final.mapping),]
dim(final.mapping); head(final.mapping)
length(unique(final.mapping$motifs))
library(ggplot2)
final.mapping %>%
group_by(motifs) %>%
summarize(TFs = n()) %>%
arrange(desc(TFs)) %>%
ggplot(aes(x=TFs)) + geom_histogram(bins = 12)
final.mapping %>%
group_by(TFs) %>%
summarize(motifs = n()) %>%
arrange(desc(motifs)) %>%
ggplot(aes(x=motifs)) + geom_histogram(bins = 17)
seth.table <- read.table(system.file(package="TReNA", "extdata", "motifGenes.tsv"), sep = "\t", header=TRUE)
dim(seth.table)
length(unique(seth.table$motif))
seth.table %>%
group_by(motif) %>%
summarize(Num.Genes = n()) %>%
arrange(desc(Num.Genes)) %>%
ggplot(aes(x=Num.Genes)) + geom_histogram(bins = 50)
seth.table %>%
group_by(tf.gene) %>%
summarize(motif = n()) %>%
arrange(desc(motif)) %>%
ggplot(aes(x=motif)) + geom_histogram(bins = 50)
missing <- setdiff(seth.table$motif,final.mapping$motifs)
length(missing)
missing.jaspar <- grep("^MA\\d+",missing, value = TRUE)
missing.jaspar
jaspar.metadata <- subset(query(MotifDb, "jaspar2016"), providerId %in% missing.jaspar)
table(values(jaspar.metadata)$organism)
table(values(query(MotifDb, "jaspar2016"))$organism)
vertebrates <- c("Ggallus","Nsp.","Ocuniculus","Rnorvegicus","Rrattus","Vertebrata", "Xlaevis",NA)
new.motifs <- subset(query(MotifDb, "jaspar2016"), organism %in% vertebrates)
length(new.motifs)
values(new.motifs)$providerId
setdiff(missing.jaspar, values(new.motifs)$providerId)
last.two <- setdiff(missing.jaspar, values(new.motifs)$providerId)
last.two <- subset(query(MotifDb, "jaspar2016"), providerId %in% last.two)
values(last.two)$organism
length(unique(seth.table$tf.gene))
length(unique(final.mapping$TFs))
length(setdiff(seth.table$tf.gene,final.mapping$TFs))
# Get motifs from 81
missing.tfs <- setdiff(seth.table$tf.gene,final.mapping$TFs)
only.from.81 <- seth.table %>% filter(motif %in% missing)
tfs.from.81 <- unique(only.from.81$tf.gene)
# Get motifs not from 81
not.from.81 <- seth.table %>% filter(!(motif %in% missing))
tfs.not.81 <- unique(not.from.81$tf.gene)
# Find the difference in the 2
tfs.only.in.81 <- setdiff(tfs.from.81, tfs.not.81)
# Total number of TFs we're missing
print(sprintf("Total number of missing TFs: %d",length(missing.tfs)))
# Number of TFs we're missing that don't have to do with the 81
print(sprintf("Missing TFs mapped to motifs we have: %d",length(setdiff(missing.tfs, tfs.only.in.81))))
# Number of Tfs associated with the 81 that are not missing
print(sprintf("Existing TFs tied to the 81 missing motifs: %d", length(setdiff(tfs.only.in.81, missing.tfs))))
# Numer of TFs we NEED to get from the 81
print(sprintf("Number of TFs we can only get from the 81 missing motifs: %d",length(intersect(tfs.only.in.81,missing.tfs))))
# Grab the 82 TFs that are still missing
still.missing <- intersect(tfs.only.in.81,missing.tfs)
# Grab the TFs associated with the 24 new genes from JASPAR
from.jaspar <- values(new.motifs)$geneSymbol
# Grab the TFs associated with the 24 new genes from Seth's table
new.motif.names <- values(new.motifs)$providerId
seth.tfs <- seth.table %>% filter(motif %in% new.motif.names)
from.seths <- as.character(seth.tfs$tf.gene)
# Add the 2 sets, find number in common with the 103 missing
all.new.tfs <- c(from.jaspar,from.seths)
intersect(all.new.tfs,still.missing)
# Grab the names of the 67 other motifs
missing.jaspar.idx <- grepl("^MA\\d+",missing)
non.jaspar <- missing[!missing.jaspar.idx]
# Find only the TFs associated with these motifs
seth.tfs <- seth.table %>% filter(motif %in% non.jaspar)
non.jaspar.tfs <- seth.tfs$tf.gene
# Find the intersection with the 101
all.new.tfs <- intersect(all.new.tfs,still.missing)
final.80 <- setdiff(still.missing, all.new.tfs)
length(intersect(non.jaspar.tfs, final.80))
final.2 <- setdiff(final.80, non.jaspar.tfs)
jaspar.2 <- setdiff(missing.jaspar, values(new.motifs)$providerId)
jaspar.2.tbl <- seth.table %>% filter(motif %in% jaspar.2)
jaspar.2.tfs <- jaspar.2.tbl$tf.gene
# Find the intersection
intersect(final.2, jaspar.2.tfs)
sort(intersect(non.jaspar.tfs, final.80))
intersect(all.new.tfs,still.missing)
non.jaspar
head(final.mapping$TFs)
intersect(final.mapping$TFs, "BCL11A")
intersect(final.mapping$TFs, "Bcl11")
grep("bcl",final.mapping$TFs)
grep("bcl",tolower(final.mapping$TFs))
grep("bcl",tolower(final.mapping$TFs), value=TRUE)
idx <- grep("bcl",tolower(final.mapping$TFs))
final.mapping[idx]
final.mapping[idx,]
idx <- grep("znf856",tolower(final.mapping$TF))
idx
grep("znf",tolower(final.mapping$TFs), value=TRUE)
grep("znf",tolower(seth.table$tf.gene), value=TRUE)
grep("bcl",tolower(seth.table$tf.gene), value=TRUE)
knitr::opts_chunk$set(echo = TRUE)
uniprobe <- read.table(file = "./uniprot_compare/tomtom.txt")
swissreg <- read.table(file = "./swiss_regulon_compare/tomtom.txt")
names(uniprobe) <- c("Query.ID", "Target.ID", "Optimal.offset", "Pvalue","Evalue","Qvalue","Overlap","Query.consensus","Target.consensus","Orientation")
names(swissreg) <- c("Query.ID", "Target.ID", "Optimal.offset", "Pvalue","Evalue","Qvalue","Overlap","Query.consensus","Target.consensus","Orientation")
dim(uniprobe); dim(swissreg)
above.uniprobe <- uniprobe %>%
select(Query.ID, Target.ID, Pvalue) %>%
mutate(logP = -1*log10(Pvalue)) %>% filter(logP >= 7.3)
above.uniprobe$Query.ID <- as.character(above.uniprobe$Query.ID)
above.uniprobe$Target.ID <- as.character(above.uniprobe$Target.ID)
repeat.uniprobe <- unique(above.uniprobe$Query.ID)
length(repeat.uniprobe)
above.swiss <- swissreg %>%
select(Query.ID, Target.ID, Pvalue) %>%
mutate(logP = -1*log10(Pvalue)) %>% filter(logP >= 7.3)
above.swiss$Query.ID <- as.character(above.swiss$Query.ID)
above.swiss$Target.ID <- as.character(above.swiss$Target.ID)
repeat.swiss <- unique(above.swiss$Query.ID)
length(repeat.swiss)
swiss.v.uniprobe <- read.table(file = "./swiss_vs_uniprobe/tomtom.txt")
names(swiss.v.uniprobe) <- c("Query.ID", "Target.ID", "Optimal.offset", "Pvalue","Evalue","Qvalue","Overlap","Query.consensus","Target.consensus","Orientation")
above.swiss.v.uniprobe <- swiss.v.uniprobe %>%
select(Query.ID, Target.ID, Pvalue) %>%
mutate(logP = -1*log10(Pvalue)) %>% filter(logP >= 7.3)
above.swiss.v.uniprobe$Query.ID <- as.character(above.swiss.v.uniprobe$Query.ID)
above.swiss.v.uniprobe$Target.ID <- as.character(above.swiss.v.uniprobe$Target.ID)
repeat.swiss.v.uniprobe <- unique(above.swiss.v.uniprobe$Query.ID)
length(repeat.swiss.v.uniprobe)
library(MotifDb)
all.uniprobe <- query(MotifDb, "uniprobe")
all.swiss <- query(MotifDb, "swissregulon")
length(all.uniprobe); length(all.swiss)
head(values(all.uniprobe)$providerId)
head(repeat.uniprobe)
trimmed.uniprobe <- gsub(".*(UP\\d{5}).*","\\1",repeat.uniprobe)
uniprobe.to.add <- subset(all.uniprobe, !(providerId %in% trimmed.uniprobe))
length(uniprobe.to.add)
head(values(all.swiss)$providerId)
head(repeat.swiss)
trimmed.swiss <- gsub("NA-SwissRegulon-(.+)","\\1",repeat.swiss)
swiss.to.add <- subset(all.swiss, !(providerId %in% trimmed.swiss))
length(swiss.to.add)
trimmed.overlaps <- gsub("NA-SwissRegulon-(.+)","\\1",repeat.swiss.v.uniprobe)
swiss.in.uniprobe <- intersect(trimmed.overlaps, values(swiss.to.add)$providerId)
length(swiss.in.uniprobe)
final.swiss.to.add <- subset(swiss.to.add, !(providerId %in% swiss.in.uniprobe))
length(final.swiss.to.add)
all.new.motifs <- c(uniprobe.to.add, final.swiss.to.add)
existing.motifs <- readRDS("../jaspar_hocomoco_mapping.RDS")
seth.table <- read.table(system.file(package="TReNA", "extdata", "motifGenes.tsv"), sep = "\t", header=TRUE)
names(existing.motifs) <- c("motif","tf.gene")
missing.motifs <- setdiff(seth.table$motif,existing.motifs$motif)
missing.tfs <- setdiff(seth.table$tf.gene,existing.motifs$tf.gene)
new.tfs <- values(all.new.motifs)$geneSymbol
grep("znf",new.tfs, value = TRUE)
grep("znf",to.lower(new.tfs), value = TRUE)
grep("znf",tolower(new.tfs), value = TRUE)
grep("bcl",tolower(new.tfs), value = TRUE)
?RProfile
?RProf
?Rprof
getwd()
setwd("/Users/mrichard/Documents")
f1
Rprof(tmp <- tempfile())
x <- matrix(1:1e6, nrow = 1000)
y <- apply(x, 1, mean)
Rprof()
summaryRprof()
Rprof(tmp <- tempfile())
x <- matrix(1:1e6, nrow = 1000)
y <- apply(x, 1, mean)
Rprof()
summaryRprof(tmp)
setwd("~/Documents/Github/FH_intermediate_R/Week_3")
knitr::opts_chunk$set(echo = TRUE)
human.hoco <- read.table(file = "../Datasets/tomtom_human.txt")
mouse.hoco <- read.table(file = "../Datasets/tomtom_mouse.txt")
all.hoco <- rbind(human.hoco,mouse.hoco)
names(all.hoco) <- c("Query.ID", "Target.ID", "Optimal.offset", "Pvalue","Evalue","Qvalue","Overlap","Query.consensus","Target.consensus","Orientation")
dim(all.hoco)
above.p <- all.hoco %>%
select(Query.ID, Target.ID, Pvalue) %>%
mutate(logP = -1*log10(Pvalue)) %>%
filter(logP >= 7.3)
head(above.p)
library(MotifDb)
str(MotifDb)
jaspar.motifs <- query(MotifDb, "jaspar2016")
length(jaspar.motifs)
jaspar.motifs <- query(MotifDb, "JASPAR2016")
length(jaspar.motifs)
head(jaspar.motifs)
jaspar.motifs <- query(MotifDb, "lyl1")
head(jaspar.motifs)
jaspar.motifs <- query(MotifDb, "sox9")
head(jaspar.motifs)
jaspar.motifs <- subset(MotifDb, geneSymbol == "SOX9")
jaspar.motifs
jaspar.motifs <- subset(MotifDb, geneSymbol == "LYL1")
jaspar.motifs
jaspar.motifs <- subset(MotifDb, geneSymbol == "Lyl1")
jaspar.motifs
jaspar.motifs <- subset(MotifDb, geneSymbol == "MESP1_DBD")
jaspar.motifs
jaspar.motifs <- subset(MotifDb, geneSymbol == "MESP1")
jaspar.motifs
table(values(jaspar.motifs))
str(jaspar.motifs)
values(MotifDb)$dataSource
table(values(MotifDb)$dataSource)
jaspar.motifs
values(jaspar.motifs)$dataSource
values(jaspar.motifs)$providerName
values(jaspar.motifs)
?db_write_table
library(RPostgreSQL)
?dbWriteTable
biocLite("installr")
library(BiocInstaller)
biocLite("installr")
install.package("installr")
install.packages("installr")
vertebrates <- c("Ggallus","Nsp.","Ocuniculus","Rnorvegicus","Rrattus","Vertebrata", "Xlaevis")
new.motifs <- subset(query(MotifDb, "jaspar2016"), organism %in% vertebrates)
length(new.motifs)
final.new.motifs <- c(all.new.motifs, new.motifs)
length(final.new.motifs)
setwd("~/Documents/Github/BDDS/trenadb/fimo/TOMTOM")
export(final.new.motifs, "../2017_07_26_new_motifs.meme",format = "meme")
saveRDS(final.new.motifs, "../2017_07_26_new_motifs.RDS")
setwd("~/Documents/Github/FH_intermediate_R/Week_4")
knitr::opts_chunk$set(echo = TRUE)
fake.data <- data.frame(x = rnorm(1000), y = rnorm(1000))
fake.data %>% ggplot(aes(x = x, y = y)) + geom_point()
fake.data <- data.frame(x = rnorm(1000), y = rnorm(1000))
fake.data %>% mutate(color = ifelse(x > 0, "blue","red")) %>%
ggplot(aes(x = x, y = y)) + geom_point(aes(col = color))
fake.data <- data.frame(x = rnorm(1000), y = rnorm(1000))
fake.data %>% mutate(color = ifelse(x > 0, TRUE, FALSE)) %>%
ggplot(aes(x = x, y = y)) + geom_point(aes(col = color))
fake.data <- data.frame(x = rnorm(1000), y = rnorm(1000))
fake.data %>% mutate(color = ifelse(x > 0, TRUE, FALSE)) %>%
ggplot(aes(x = x, y = y)) + geom_point(aes(col = color)) %>%
mutate(z = abs(x+y))
fake.data <- data.frame(x = rnorm(1000), y = rnorm(1000))
fake.data %>% mutate(color = ifelse(x > 0, TRUE, FALSE)) %>%
ggplot(aes(x = x, y = y)) + geom_point(aes(col = color)) %>%
mutate(z = abs(x+y))
fake.data %>% subset(x > 1 & y > 1)
fake.data %>% subset(x > 1.5 & y > 1)
fit <- fake.data %>% lm(x~y)
fit <- fake.data %>% lm(formula = x~y)
fit <- fake.data %>% lm(formula = x~y)
summary(fit)
fit <- fake.data %>% lm(formula = y~x)
summary(fit)
fit <- fake.data %>% lm(formula = y~x)
summary(fit)$coefficients
fit <- fake.data %>% lm(formula = y~x)
summary(fit)
fake.data <- data.frame(x = rnorm(1000), y = rnorm(1000))
fake.data %>% mutate(my.color = ifelse(x > 0, TRUE, FALSE)) %>%
ggplot(aes(x = x, y = y)) + geom_point(aes(col = my.color))
data(mtcars)
mtcars
data(fathers)
?data
data(women)
head(women)
women
data(trees)
head(trees)
t <- round(rnorm(100)*100)
hist(t)
t <- round(rnorm(1000)*100)
hist(t)
t <- abs(round(rnorm(1000)*100))
hist(t)
my.men <- 69.7 + round(rnorm(1000)*3)
hist(my.men)
my.men <- 69.7 + round(rnorm(500)*3)
my.women <- 63.8 + round(rnorm(500)*3)
fake.heights <- data.frame(male = my.men, female = my.women)
view(fake.heights)
fake.heights
xtable(fake.heights)
install.packages("formattable")
library(formattable)
formattable(fake.heights)
par(mfrow(2,1))
par(mfrow = c(2,1))
hist(my.men)
hist(my.women)
formattable(fake.heights)
hist(my.women)
par(mfrow = c(1,1))
par(mfrow = c(1,1))
hist(my.women)
abline(x = median(my.women))
lines(x = median(my.women))
hist(my.women)
hist(my.women)
abline(v = median(my.women), col = "blue")
abline(v = median(my.women), col = "blue", lwd = 2)
abline(v = mean(my.women), col = "red", lwd = 2)
sqrt(7)
mean(c(64,65,66,63,80))
median(c(64,65,66,63,80))
formattable(fake.heights)
mtcards
mrcars
mtcars
?density
library(ggplot2)
library(reshape2)
blah <- melt(fake.heights)
dim(blah)
head(blah)
ggplot(blah, aes(x = value, fill = variable)) + geom_density(alpha = 0.25)
?t
ttest
?t-test
?t.test
t.test(x = my.men, y = my.women)
blah <- 1:10
blah2 <- 4:13
blah 3 <- sample(1:10)
blah3 <- sample(1:10)
anova(blah,blah2,blah3)
?anova
anova(lm(blah),lm(blah2),lm(blah3))
anova(lm(blah~1:10),lm(blah2~1:10),lm(blah3~1:10))
library(MotifDb)
length(MotifDb)
